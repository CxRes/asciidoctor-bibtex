#!/usr/bin/env ruby

# Executable asciidoctor-bib
#
# Uses asciidoctor preprocessor extension to include citations and bibliography
# in a single pass.
#
# Copyright (c) Peter Lane, 2013.
# Released under Open Works License, 0.9.2

unless $:.include?(libdir = File.expand_path('../lib', File.dirname(__FILE__)))
  $:.unshift libdir
end
require 'asciidoc-bib'
require 'asciidoctor/cli'

# Treat '--version' specially, like that in asciidoctor-pdf
options = Asciidoctor::Cli::Options.new
unless (ARGV & ['-V', '--version']).empty?
  $stdout.write %(Asciidoctor Bib #{AsciidocBib::VERSION} using )
  # NOTE the print_version method was added in Asciidoctor 1.5.2
  if options.respond_to? :print_version
    options.print_version
  else
    puts %(Asciidoctor #{::Asciidoctor::VERSION} [http://asciidoctor.org])
  end
  exit 0
end

# Add help information on how to set bibtex related values via asciidoctor
# commandline. This is the usual CLI attributes definition.
if not (ARGV & ['-h', '--help']).empty?
  # parse argument with asciidoctor to print asciidoctor's helps
  options.parse! ARGV
  puts ""
  puts "AsciidoctorBib related options:"
  puts ""
  puts "    -a bib-file=FILENAME    Set BibTex filename (default: auto-find)"
  puts "    -a bib-style=STYLE      Set BibTex items style (default: apa)"
  puts "    -a bib-numeric-order=<alphabetical|appearance>"
  puts "                            Set citation order scheme (default: alphabetical)"
  puts "    -a bib-no-links=1       Do not use links (default: use links)"
  puts ""
  exit 0
end

# Use standard asciidoctor CLI mechanism to call asciidoctor, so we can accept
# all asciidoctor options. Note that we only accept asciidoctor options here.
# This code is stolen shamlessly from asciidoctor-pdf
case (result = options.parse! ARGV)
when Integer
  exit result
else
  invoker = Asciidoctor::Cli::Invoker.new options
  GC.start
  invoker.invoke!
  exit invoker.code
end
